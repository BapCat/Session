#!/usr/bin/env php
<?php

require __DIR__ . '/vendor/autoload.php';

use BapCat\Persist\Drivers\Local\LocalDriver;
use BapCat\Phi\Phi;
use BapCat\Remodel\Registry;
use BapCat\Remodel\RemodelConnection;

use BapCat\Session\DatabaseSessionServiceProvider;
use BapCat\Session\DatabaseSessionStorage;
use BapCat\Session\SessionGateway;
use BapCat\Session\SessionManager;

use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\ConnectionInterface;
use Illuminate\Database\Query\Grammars\SQLiteGrammar;
use Illuminate\Database\Query\Processors\SQLiteProcessor;
use Illuminate\Database\Schema\Grammars\SQLiteGrammar as SQLiteSchemaGrammar;

$ioc = Phi::instance();

//-CONNECTION--------------------------------------------------------
$pdo = new PDO('sqlite::memory:');

$connection = new RemodelConnection($pdo, new SQLiteGrammar(), new SQLiteProcessor());
$connection->setSchemaGrammar(new SQLiteSchemaGrammar());

$connection->getSchemaBuilder()->create('sessions', function(Blueprint $table) use($connection) {
  $table->string('token', 64);
  $table->string('data');
  $table->timestamp('created_at')->default($connection->raw('CURRENT_TIMESTAMP'));
  $table->timestamp('updated_at')->default($connection->raw('CURRENT_TIMESTAMP'));
  
  $table->primary('token');
});

$ioc->bind(ConnectionInterface::class, $connection);
//-------------------------------------------------------------------

//-REMODEL-----------------------------------------------------------
$fs = new LocalDriver(__DIR__);
$cache = $fs->getDirectory('cache');

$remodel = new Registry($ioc, $cache);

$ioc->bind(Registry::class, $remodel);
//-------------------------------------------------------------------

$provider = new DatabaseSessionServiceProvider($ioc, $remodel);
$provider->register();
$provider->boot();

$manager = $ioc->make(SessionManager::class);

$gateway = $ioc->make(SessionGateway::class);

$manager->set('test', 'This is a test');
$manager->close();

$s1 = $gateway->query()->get();

$manager->open();
$manager->set('test', 'This is not a test');
$manager->close();

$s2 = $gateway->query()->get();

var_dump($s1, $s2);
