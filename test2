#!/usr/bin/env php
<?php

require __DIR__ . '/vendor/autoload.php';

use BapCat\Persist\Drivers\Local\LocalDriver;
use BapCat\Phi\Phi;
use BapCat\Remodel\Registry;

use BapCat\Session\DatabaseSessionServiceProvider;
use BapCat\Session\DatabaseSessionStorage;
use BapCat\Session\SessionGateway;
use BapCat\Session\SessionManager;

use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\ConnectionInterface;
use Illuminate\Database\SQLiteConnection;

$ioc = Phi::instance();

//-CONNECTION--------------------------------------------------------
$pdo = new PDO('sqlite::memory:');
$pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

$connection = new SQLiteConnection($pdo);
$connection->setFetchMode(PDO::FETCH_ASSOC);

$connection->getSchemaBuilder()->create('sessions', function(Blueprint $table) use($connection) {
  $table->increments('id');
  $table->string('session_id', 64)->unique();
  $table->string('session_data');
  $table->timestamp('created_at')->default($connection->raw('CURRENT_TIMESTAMP'));
  $table->timestamp('updated_at')->default($connection->raw('CURRENT_TIMESTAMP'));
});

$ioc->bind(ConnectionInterface::class, $connection);
//-------------------------------------------------------------------

//-REMODEL-----------------------------------------------------------
$fs = new LocalDriver(__DIR__);
$cache = $fs->getDirectory('cache');

$remodel = new Registry($ioc, $cache);

$ioc->bind(Registry::class, $remodel);
//-------------------------------------------------------------------

$provider = new DatabaseSessionServiceProvider($ioc, $remodel);
$provider->register();
$provider->boot();

$manager = $ioc->make(SessionManager::class);

$manager->open();
$manager->set('test', 'This is a test');
$manager->close();

$gateway = $ioc->make(SessionGateway::class);
var_dump($gateway->query()->first());
